name: Test SSH Connection to FTP Server

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test

jobs:
  test-connection:
    runs-on: windows-latest  # Running on Windows

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Prepare SSH private key
      run: |
        # Fetch the private key from GitHub Secrets and save it to a file
        $privateKey = "${{ secrets.FTP_PRIVATE_KEY }}"
        $privateKeyPath = "pri.key"
        $formattedKeyPath = "formatted_pri.key"

        # Ensure pri.key doesn't exist before writing (delete it if it exists)
        if (Test-Path $privateKeyPath) {
            Remove-Item $privateKeyPath -Force
        }

        # Write the private key to a file
        $privateKey | Out-File -FilePath $privateKeyPath -Encoding utf8

        # Optionally, reformat the key if needed (e.g., for newline characters)
        # PowerShell handles newlines properly, so this step may be unnecessary
        # If reformatting is needed, you can use something like:
        # (Get-Content pri.key) -replace '\\n', "`n" | Set-Content pri.key

        # Verify the private key (optional, just to check its validity)
        ssh-keygen -y -f $privateKeyPath || { Write-Host "Invalid private key"; exit 1; }

        # Set permissions for the private key (on Windows, permissions are handled differently)
        # For Windows, there is no need to set the permission like Linux, so this step is skipped
        # However, you may choose to configure the security permissions if necessary via PowerShell cmdlets (not required for SSH).

    - name: Test SSH connection to FTP server
      run: |
        # Test the SSH connection to the FTP server using the private key
        echo "Testing SSH connection to FTP server..."
        ssh -o StrictHostKeyChecking=no -i pri.key preprodftp@92.180.12.186 ls
      shell: bash
