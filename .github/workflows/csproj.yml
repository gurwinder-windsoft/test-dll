name: MongoDB Export and Import

on:
  push:
    branches:
      - test  # Trigger the workflow on push to the 'test' branch

jobs:
  mongo-export-import:
    runs-on: windows-latest  # Use Windows runner for PowerShell

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Step 2: Download and install MongoDB Tools
    - name: Install MongoDB Tools
      run: |
        # Download MongoDB tools and unzip them
        Invoke-WebRequest -Uri "https://fastdl.mongodb.org/tools/db/mongodb-database-tools-windows-x86_64-100.10.0.zip" -OutFile "mongodb-tools.zip"
        Expand-Archive -Path "mongodb-tools.zip" -DestinationPath "C:\mongodb-tools"

        # Debugging step to list contents of the extracted folder
        Write-Host "Listing files in the extracted MongoDB tools folder:"
        Get-ChildItem -Path "C:\mongodb-tools\mongodb-database-tools-windows-x86_64-100.10.0\bin" -Recurse

        # Add MongoDB tools to PATH and persist across steps
        echo "C:\mongodb-tools\mongodb-database-tools-windows-x86_64-100.10.0\bin" >> $GITHUB_ENV

        # Check if mongoexport exists after extraction
        $mongoexportPath = "C:\mongodb-tools\mongodb-database-tools-windows-x86_64-100.10.0\bin\mongoexport"
        if (Test-Path $mongoexportPath) {
          Write-Host "mongoexport found at $mongoexportPath"
        } else {
          Write-Host "mongoexport not found at $mongoexportPath"
          exit 1
        }

    # Step 3: Set MongoDB URIs and Run PowerShell Script
    - name: Run MongoDB Export and Import Script
      env:
        PREPROD_URI: ${{ secrets.PREPROD_URI }}  # MongoDB preprod URI from secrets
        PROD_URI: ${{ secrets.PROD_URI }}        # MongoDB prod URI from secrets
      run: |
        # Set the PATH to include MongoDB tools location
        $env:PATH = "C:\mongodb-tools\mongodb-database-tools-windows-x86_64-100.10.0\bin;" + $env:PATH

        # Verify mongoexport is available after modifying PATH
        Write-Host "Current PATH: $env:PATH"
        if (-not (Get-Command mongoexport -ErrorAction SilentlyContinue)) {
          Write-Host "mongoexport not found in PATH"
          exit 1
        } else {
          Write-Host "mongoexport found in PATH"
        }

        # Run the PowerShell script (ensure mongo.ps1 is in the root of your repository)
        pwsh -Command "& .\mongo.ps1"
