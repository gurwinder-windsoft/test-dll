name: MongoDB Export and Import

on:
  push:
    branches:
      - test  # Trigger the workflow on push to the 'test' branch

jobs:
  mongo-export-import:
    runs-on: windows-latest  # Use Windows runner for PowerShell

    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Step 2: Download and install MongoDB Tools
    - name: Install MongoDB Tools
      run: |
        # Download MongoDB tools and unzip
        Invoke-WebRequest -Uri "https://fastdl.mongodb.org/tools/db/mongodb-database-tools-windows-x86_64-100.5.1.zip" -OutFile "mongodb-tools.zip"
        Expand-Archive -Path "mongodb-tools.zip" -DestinationPath "C:\mongodb-tools"
        
        # Verify MongoDB tools installation
        Write-Host "Contents of C:\mongodb-tools\bin:"
        Get-ChildItem -Path "C:\mongodb-tools\bin"
        
        # Add MongoDB tools to PATH
        echo "PATH=C:\mongodb-tools\bin:$PATH" >> $GITHUB_ENV

    # Step 3: Set MongoDB URIs and Run PowerShell Script
    - name: Run MongoDB Export and Import Script
      env:
        PREPROD_URI: ${{ secrets.PREPROD_URI }}  # MongoDB preprod URI from secrets
        PROD_URI: ${{ secrets.PROD_URI }}        # MongoDB prod URI from secrets
      run: |
        # Explicitly set PATH for PowerShell
        $env:PATH = "C:\mongodb-tools\bin;" + $env:PATH

        # Print out the PATH for debugging purposes
        Write-Host "Current PATH: $env:PATH"

        # Ensure mongoexport is available
        $mongoexportPath = "C:\mongodb-tools\bin\mongoexport"
        if (Test-Path $mongoexportPath) {
            Write-Host "mongoexport found at $mongoexportPath"
        } else {
            Write-Host "mongoexport not found at $mongoexportPath"
        }

        # Run the PowerShell script (ensure mongo.ps1 is in the root of your repository)
        pwsh -Command "& .\mongo.ps1"
