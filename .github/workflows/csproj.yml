name: MongoDB Export and Import

on:
  push:
    branches:
      - test  # Trigger the workflow on push to the'test' branch

jobs:
  mongo-export-import:
    runs-on: windows-latest
    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      PREPROD_PASSWORD: ${{ secrets.PREPROD_PASSWORD }}
      PROD_PASSWORD: ${{ secrets.PROD_PASSWORD }}
      AZURE_VM_PUBLIC_IP: ${{ secrets.AZURE_VM_PUBLIC_IP }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} 

    - name: Get GitHub Runner's IP
      id: runner_ip
      run: |
        $runner_ip = Invoke-RestMethod -Uri "http://ifconfig.me"
        Write-Host "Runner IP: $runner_ip"
        echo "runner_ip=$runner_ip" >> $env:GITHUB_ENV 

    - name: Add GitHub Runner IP to Both NSGs
      run: |
        $nsgNames = @("ProdNSG", "ProdMongoDbNSG")  # Array of NSG names to target
        foreach ($nsgName in $nsgNames) {
          # Add rule to each NSG
          az network nsg rule create --resource-group "WindSoft" --nsg-name $nsgName --name AllowGitHubRunner --protocol tcp --priority 1000 --source-address-prefixes ${{ env.runner_ip }} --destination-port-ranges 27022 27018 --access Allow --direction Inbound
        }
    - name: Install MongoDB Tools
      run: |
        Invoke-WebRequest -Uri "https://fastdl.mongodb.org/tools/db/mongodb-database-tools-windows-x86_64-100.10.0.zip" -OutFile "mongodb-tools.zip"
        Expand-Archive -Path "mongodb-tools.zip" -DestinationPath "C:\mongodb-tools"
        Write-Host "Listing files in the extracted MongoDB tools folder:"
        Get-ChildItem -Path "C:\mongodb-tools\mongodb-database-tools-windows-x86_64-100.10.0\bin" -Recurse
        echo "C:\mongodb-tools\mongodb-database-tools-windows-x86_64-100.10.0\bin" >> $GITHUB_ENV  

    - name: Run PowerShell Script
      shell: pwsh
      run: |
        # Call script
        .\mongo.ps1

    - name: Remove GitHub Runner IP from Both NSGs
      run: |
        $nsgNames = @("ProdNSG", "ProdMongoDbNSG")  # Array of NSG names to target
        foreach ($nsgName in $nsgNames) {
          # Remove rule from each NSG
          az network nsg rule delete `
            --resource-group "WindSoft" `
            --nsg-name $nsgName `
            --name AllowGitHubRunner
        }
